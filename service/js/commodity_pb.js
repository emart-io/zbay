/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.zbay.Commodity', null, global);
goog.exportSymbol('proto.zbay.Medium', null, global);
goog.exportSymbol('proto.zbay.Price', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zbay.Commodity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zbay.Commodity.repeatedFields_, null);
};
goog.inherits(proto.zbay.Commodity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zbay.Commodity.displayName = 'proto.zbay.Commodity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zbay.Price = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zbay.Price, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zbay.Price.displayName = 'proto.zbay.Price';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zbay.Medium = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zbay.Medium, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zbay.Medium.displayName = 'proto.zbay.Medium';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zbay.Commodity.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zbay.Commodity.prototype.toObject = function(opt_includeInstance) {
  return proto.zbay.Commodity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zbay.Commodity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Commodity.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    category: jspb.Message.getFieldWithDefault(msg, 3, ""),
    content: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mediaList: jspb.Message.toObjectList(msg.getMediaList(),
    proto.zbay.Medium.toObject, includeInstance),
    city: jspb.Message.getFieldWithDefault(msg, 6, ""),
    price: (f = msg.getPrice()) && proto.zbay.Price.toObject(includeInstance, f),
    amount: jspb.Message.getFieldWithDefault(msg, 8, 0),
    fare: jspb.Message.getFieldWithDefault(msg, 9, 0),
    owner: jspb.Message.getFieldWithDefault(msg, 10, ""),
    annotationsMap: (f = msg.getAnnotationsMap()) ? f.toObject(includeInstance, undefined) : [],
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    updated: (f = msg.getUpdated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zbay.Commodity}
 */
proto.zbay.Commodity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zbay.Commodity;
  return proto.zbay.Commodity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zbay.Commodity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zbay.Commodity}
 */
proto.zbay.Commodity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 5:
      var value = new proto.zbay.Medium;
      reader.readMessage(value,proto.zbay.Medium.deserializeBinaryFromReader);
      msg.addMedia(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 7:
      var value = new proto.zbay.Price;
      reader.readMessage(value,proto.zbay.Price.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAmount(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFare(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setOwner(value);
      break;
    case 11:
      var value = msg.getAnnotationsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 12:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 13:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zbay.Commodity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zbay.Commodity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zbay.Commodity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Commodity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContent();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMediaList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.zbay.Medium.serializeBinaryToWriter
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.zbay.Price.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getFare();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getOwner();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getAnnotationsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUpdated();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


Object.defineProperty(proto.zbay.Commodity.prototype, "id", {
  set: function(value) {
    this.setId(value);
  },
  get: function() {
    return this.getId();
  },
});


/**
 * optional string id = 1;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "title", {
  set: function(value) {
    this.setTitle(value);
  },
  get: function() {
    return this.getTitle();
  },
});


/**
 * optional string title = 2;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "category", {
  set: function(value) {
    this.setCategory(value);
  },
  get: function() {
    return this.getCategory();
  },
});


/**
 * optional string category = 3;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "content", {
  set: function(value) {
    this.setContent(value);
  },
  get: function() {
    return this.getContent();
  },
});


/**
 * optional string content = 4;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setContent = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "mediaList", {
  set: function(value) {
    this.setMediaList(value);
  },
  get: function() {
    return this.getMediaList();
  },
});


/**
 * repeated Medium media = 5;
 * @return {!Array<!proto.zbay.Medium>}
 */
proto.zbay.Commodity.prototype.getMediaList = function() {
  return /** @type{!Array<!proto.zbay.Medium>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zbay.Medium, 5));
};


/** @param {!Array<!proto.zbay.Medium>} value */
proto.zbay.Commodity.prototype.setMediaList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.zbay.Medium=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zbay.Medium}
 */
proto.zbay.Commodity.prototype.addMedia = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.zbay.Medium, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.zbay.Commodity.prototype.clearMediaList = function() {
  this.setMediaList([]);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "city", {
  set: function(value) {
    this.setCity(value);
  },
  get: function() {
    return this.getCity();
  },
});


/**
 * optional string city = 6;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "price", {
  set: function(value) {
    this.setPrice(value);
  },
  get: function() {
    return this.getPrice();
  },
});


/**
 * optional Price price = 7;
 * @return {?proto.zbay.Price}
 */
proto.zbay.Commodity.prototype.getPrice = function() {
  return /** @type{?proto.zbay.Price} */ (
    jspb.Message.getWrapperField(this, proto.zbay.Price, 7));
};


/** @param {?proto.zbay.Price|undefined} value */
proto.zbay.Commodity.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.zbay.Commodity.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zbay.Commodity.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 7) != null;
};


Object.defineProperty(proto.zbay.Commodity.prototype, "amount", {
  set: function(value) {
    this.setAmount(value);
  },
  get: function() {
    return this.getAmount();
  },
});


/**
 * optional int32 amount = 8;
 * @return {number}
 */
proto.zbay.Commodity.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.zbay.Commodity.prototype.setAmount = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "fare", {
  set: function(value) {
    this.setFare(value);
  },
  get: function() {
    return this.getFare();
  },
});


/**
 * optional int32 fare = 9;
 * @return {number}
 */
proto.zbay.Commodity.prototype.getFare = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.zbay.Commodity.prototype.setFare = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "owner", {
  set: function(value) {
    this.setOwner(value);
  },
  get: function() {
    return this.getOwner();
  },
});


/**
 * optional string owner = 10;
 * @return {string}
 */
proto.zbay.Commodity.prototype.getOwner = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.zbay.Commodity.prototype.setOwner = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


Object.defineProperty(proto.zbay.Commodity.prototype, "annotationsMap", {
  set: function(value) {
    this.setAnnotationsMap(value);
  },
  get: function() {
    return this.getAnnotationsMap();
  },
});


/**
 * map<string, string> annotations = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.zbay.Commodity.prototype.getAnnotationsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.zbay.Commodity.prototype.clearAnnotationsMap = function() {
  this.getAnnotationsMap().clear();
};


Object.defineProperty(proto.zbay.Commodity.prototype, "created", {
  set: function(value) {
    this.setCreated(value);
  },
  get: function() {
    return this.getCreated();
  },
});


/**
 * optional google.protobuf.Timestamp created = 12;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.zbay.Commodity.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 12));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.zbay.Commodity.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.zbay.Commodity.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zbay.Commodity.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 12) != null;
};


Object.defineProperty(proto.zbay.Commodity.prototype, "updated", {
  set: function(value) {
    this.setUpdated(value);
  },
  get: function() {
    return this.getUpdated();
  },
});


/**
 * optional google.protobuf.Timestamp updated = 13;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.zbay.Commodity.prototype.getUpdated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 13));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.zbay.Commodity.prototype.setUpdated = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.zbay.Commodity.prototype.clearUpdated = function() {
  this.setUpdated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zbay.Commodity.prototype.hasUpdated = function() {
  return jspb.Message.getField(this, 13) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zbay.Price.prototype.toObject = function(opt_includeInstance) {
  return proto.zbay.Price.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zbay.Price} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Price.toObject = function(includeInstance, msg) {
  var f, obj = {
    single: jspb.Message.getFieldWithDefault(msg, 1, 0),
    group: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zbay.Price}
 */
proto.zbay.Price.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zbay.Price;
  return proto.zbay.Price.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zbay.Price} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zbay.Price}
 */
proto.zbay.Price.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSingle(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGroup(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zbay.Price.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zbay.Price.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zbay.Price} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Price.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSingle();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getGroup();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


Object.defineProperty(proto.zbay.Price.prototype, "single", {
  set: function(value) {
    this.setSingle(value);
  },
  get: function() {
    return this.getSingle();
  },
});


/**
 * optional uint32 single = 1;
 * @return {number}
 */
proto.zbay.Price.prototype.getSingle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.zbay.Price.prototype.setSingle = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


Object.defineProperty(proto.zbay.Price.prototype, "group", {
  set: function(value) {
    this.setGroup(value);
  },
  get: function() {
    return this.getGroup();
  },
});


/**
 * optional uint32 group = 2;
 * @return {number}
 */
proto.zbay.Price.prototype.getGroup = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.zbay.Price.prototype.setGroup = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zbay.Medium.prototype.toObject = function(opt_includeInstance) {
  return proto.zbay.Medium.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zbay.Medium} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Medium.toObject = function(includeInstance, msg) {
  var f, obj = {
    image: jspb.Message.getFieldWithDefault(msg, 1, ""),
    video: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zbay.Medium}
 */
proto.zbay.Medium.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zbay.Medium;
  return proto.zbay.Medium.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zbay.Medium} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zbay.Medium}
 */
proto.zbay.Medium.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zbay.Medium.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zbay.Medium.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zbay.Medium} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zbay.Medium.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVideo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


Object.defineProperty(proto.zbay.Medium.prototype, "image", {
  set: function(value) {
    this.setImage(value);
  },
  get: function() {
    return this.getImage();
  },
});


/**
 * optional string image = 1;
 * @return {string}
 */
proto.zbay.Medium.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.zbay.Medium.prototype.setImage = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


Object.defineProperty(proto.zbay.Medium.prototype, "video", {
  set: function(value) {
    this.setVideo(value);
  },
  get: function() {
    return this.getVideo();
  },
});


/**
 * optional string video = 2;
 * @return {string}
 */
proto.zbay.Medium.prototype.getVideo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.zbay.Medium.prototype.setVideo = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.zbay);
